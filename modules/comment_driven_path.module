<?php
// $Id$

/**
 * Implements hook_driven_properties().
 */
function comment_driven_path_driven_properties($node_type) {
  $available_props = array();

  $prefix = t('Path') . ' Â» ';
  
  // required to match form's structure (#parents + $element itself)
  $property_path = 'path';
  $available_props[$property_path] = array(
    'realm' => 'path', // optional: realm (otherwise will be the module name)
    // optional: by default first title found in parents chain would be picked
    // which would be the fieldset's title: 'URL path settings'
    'label' => t('URL path'),
    'type_settings' => array( // optional: content type settings
      // optional: title for this property's checkbox on content type page
      '#title' => $prefix . t('URL'),
    ),
  ); 
  
  return $available_props;
}

/**
 * Implements hook_diff_values().
 */
function comment_driven_path_diff_values($element, $form_values, $meta) {
  extract($meta); // $realm, $property_path
  
  // until now we handle a unique (well known) property here
  
  $default = comment_driven_known_default_value($element);
  // $value will be normized if needed (per case basis)
  // to match #default_value format instead of $form_state['values']
  $value = comment_driven_form_get_value($element['#parents'], $form_values);
  
  if (_comment_driven_equal_non_array($default, $value)) return FALSE;
  return array($default, $value);
}

/**
 * Implements hook_diff_render().
 */
function comment_driven_path_diff_render($old, $new, $meta) {
  extract($meta); // $realm, $property_path
  
  // the property that path module adds to nodes is path
  // there are contrib modules which add more stuff under "URL path" fieldset
  // but they will need to request to be supported here
  // @TODO: review pathauto & other modules acting on path
  $outgoing = $old['path'];
  $incoming = $new['path'];
  
  // don't create a link unless an actual path exists
  // (an of course, don't hit the database to look for an empty string)
  if ($outgoing && drupal_lookup_path('source', $outgoing)) {
    $outgoing = theme('comment_driven_path_link', $outgoing);
  }
  if ($incoming && drupal_lookup_path('source', $incoming)) {
    $incoming = theme('comment_driven_path_link', $incoming);
  }
  
  return array($outgoing, $incoming);
}

